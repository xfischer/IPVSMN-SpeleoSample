<#@ template debug="false" hostspecific="false" language="c#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".fx" #>
//-----------------------------------------------------
//         Autogenerated code - DO NOT EDIT -
//           Edit Permutations.tt and save.
//-----------------------------------------------------

#include "PBR.fx"
#include "VertexShaders.fx"

<# //--------------------------------------------------- Pixel Shader Permutations

var psShaders = new List<string>(); // store pixel shader definitions here

const int PIXELPERMUTATIONS = 32; // replaced with 64 to add the IBL permutation

for(int psIdx=0; psIdx < PIXELPERMUTATIONS; ++psIdx)
{


var PSSHADER = "Ps";

var hasTangents =(psIdx & 1) != 0;
var hasPrimary =(psIdx & 2) != 0;
var hasSecondary =(psIdx & 4) != 0;
var hasEmissive =(psIdx & 8) != 0;
var hasOpacity =(psIdx & 16) != 0;
var hasIBLight =(psIdx & 32) != 0;

PSSHADER += hasTangents ? "Tangents" : "Normals";

if (hasPrimary) PSSHADER += "Primary";
if (hasSecondary) PSSHADER += "Secondary";
if (hasEmissive) PSSHADER += "Emissive";
if (hasOpacity) PSSHADER += "Opacity";
if (hasIBLight) PSSHADER += "IBL";

psShaders.Add(PSSHADER);

//--------------------------------------------------- #>

float4 <#=PSSHADER#>(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, <#= hasTangents.ToString().ToLower() #>
	, <#= hasPrimary.ToString().ToLower() #>
	, <#= hasSecondary.ToString().ToLower() #>
	, <#= hasEmissive.ToString().ToLower() #>
	, <#= hasOpacity.ToString().ToLower() #>
 // , <#= hasIBLight.ToString().ToLower() #> // uncomment to add IBL parameter
	);
}

<# } #>


<# //--------------------------------------------------- Vertex Shader & Technique Permutations

// for each pixel shader permutation, we add 4 techniques: rigid, skinned, rigid+Tbasis, skinned+Tbasis

for(int psIdx=0; psIdx < psShaders.Count; ++psIdx)
{
	var PSSHADER = psShaders[psIdx]; var hasTangents =(psIdx & 1) != 0;

	for(int vsIdx =0; vsIdx < 4; ++vsIdx)
		{
		var VSSHADER = vsIdx == 0 || vsIdx == 2 ? "VsRigid" : "VsSkinned";
		if (hasTangents) VSSHADER +="Basis";
#>
TECHNIQUE(<#=VSSHADER#>_<#=PSSHADER#>, <#=VSSHADER#>, <#=PSSHADER#> );

<#		} } #>